'use strict';

angular.module('terminatorApp').service('PositionSvc', function ($http, $q) {

  ////////////////////////
  // Position Calls
  ////////////////////////

  this.getPositions = function () {

    var defer = $q.defer();

    $http({
      method: "GET",
      url: "/api/position"
    }).then(function (response) {
      defer.resolve(response);
    }, function (error) {
      console.log("error: ", error);
    });

    return defer.promise;
  };

  this.getOnePosition = function (id) {

    var defer = $q.defer();

    $http({
      method: "GET",
      url: "/api/position/" + id
    }).then(function (response) {
      defer.resolve(response);
    }, function (error) {
      console.log("error: ", error);
    });

    return defer.promise;
  };

  this.getPositionTask = function (id) {

    var defer = $q.defer();

    $http({
      method: "GET",
      url: "/api/tasks/position/" + id
    }).then(function (response) {
      defer.resolve(response);
    }, function (error) {
      console.log("error: ", error);
    });

    return defer.promise;
  };

  this.postPosition = function () {
    var defer = $q.defer();

    $http({
      method: "POST",
      url: "/api/position",
      data: {}
    }).then(function (response) {
      defer.resolve(response);
    }, function (error) {
      console.log("error: ", error);
    });

    return defer.promise;
  };

  this.editPosition = function () {
    var defer = $q.defer();

    $http({
      method: "PUT",
      url: "/api/position/" + id,
      data: {}
    }).then(function (response) {
      defer.resolve(response);
    }, function (error) {
      console.log("error: ", error);
    });

    return defer.promise;
  };

  this.deletePosition = function (id) {
    var defer = $q.defer();

    $http({
      method: "DELETE",
      url: "/api/position/" + id
    }).then(function (response) {
      defer.resolve(response);
    }, function (error) {
      console.log("error: ", error);
    });

    return defer.promise;
  };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInB1YmxpYy9zZXJ2aWNlcy9Qb3NpdGlvblN2Yy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sQ0FBQyxNQUFNLENBQUMsZUFBZSxDQUFDLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBRSxVQUFTLEtBQUssRUFBRSxFQUFFLEVBQUU7Ozs7OztBQU16RSxNQUFJLENBQUMsWUFBWSxHQUFHLFlBQVk7O0FBRTlCLFFBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQzs7QUFFdkIsU0FBSyxDQUFDO0FBQ0osWUFBTSxFQUFFLEtBQUs7QUFDYixTQUFHLEVBQUUsZUFBZTtLQUNyQixDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVMsUUFBUSxFQUFFO0FBQ3pCLFdBQUssQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7S0FDekIsRUFBRSxVQUFVLEtBQUssRUFBRTtBQUNsQixhQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsQ0FBQztLQUMvQixDQUFDLENBQUM7O0FBRUgsV0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDO0dBQ3RCLENBQUM7O0FBRUYsTUFBSSxDQUFDLGNBQWMsR0FBRyxVQUFVLEVBQUUsRUFBRTs7QUFFbEMsUUFBSSxLQUFLLEdBQUcsRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDOztBQUV2QixTQUFLLENBQUM7QUFDSixZQUFNLEVBQUUsS0FBSztBQUNiLFNBQUcsRUFBRSxnQkFBZ0IsR0FBRyxFQUFFO0tBQzNCLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBUyxRQUFRLEVBQUU7QUFDekIsV0FBSyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztLQUN6QixFQUFFLFVBQVUsS0FBSyxFQUFFO0FBQ2xCLGFBQU8sQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQyxDQUFDO0tBQy9CLENBQUMsQ0FBQzs7QUFFSCxXQUFPLEtBQUssQ0FBQyxPQUFPLENBQUM7R0FDdEIsQ0FBQzs7QUFFRixNQUFJLENBQUMsZUFBZSxHQUFHLFVBQVUsRUFBRSxFQUFFOztBQUVuQyxRQUFJLEtBQUssR0FBRyxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUM7O0FBRXZCLFNBQUssQ0FBQztBQUNKLFlBQU0sRUFBRSxLQUFLO0FBQ2IsU0FBRyxFQUFFLHNCQUFzQixHQUFHLEVBQUU7S0FDakMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFTLFFBQVEsRUFBRTtBQUN6QixXQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0tBQ3pCLEVBQUUsVUFBVSxLQUFLLEVBQUU7QUFDbEIsYUFBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLENBQUM7S0FDL0IsQ0FBQyxDQUFDOztBQUVILFdBQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQztHQUN0QixDQUFDOztBQUVGLE1BQUksQ0FBQyxZQUFZLEdBQUcsWUFBWTtBQUM5QixRQUFJLEtBQUssR0FBRyxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUM7O0FBRXZCLFNBQUssQ0FBQztBQUNKLFlBQU0sRUFBRSxNQUFNO0FBQ2QsU0FBRyxFQUFFLGVBQWU7QUFDcEIsVUFBSSxFQUFFLEVBQUU7S0FDVCxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVMsUUFBUSxFQUFFO0FBQ3pCLFdBQUssQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7S0FDekIsRUFBRSxVQUFVLEtBQUssRUFBRTtBQUNsQixhQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsQ0FBQztLQUMvQixDQUFDLENBQUM7O0FBRUgsV0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDO0dBQ3RCLENBQUM7O0FBRUYsTUFBSSxDQUFDLFlBQVksR0FBRyxZQUFZO0FBQzlCLFFBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQzs7QUFFdkIsU0FBSyxDQUFDO0FBQ0osWUFBTSxFQUFFLEtBQUs7QUFDYixTQUFHLEVBQUUsZ0JBQWdCLEdBQUcsRUFBRTtBQUMxQixVQUFJLEVBQUUsRUFBRTtLQUNULENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBUyxRQUFRLEVBQUU7QUFDekIsV0FBSyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztLQUN6QixFQUFFLFVBQVUsS0FBSyxFQUFFO0FBQ2xCLGFBQU8sQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQyxDQUFDO0tBQy9CLENBQUMsQ0FBQzs7QUFFSCxXQUFPLEtBQUssQ0FBQyxPQUFPLENBQUM7R0FDdEIsQ0FBQzs7QUFFRixNQUFJLENBQUMsY0FBYyxHQUFHLFVBQVUsRUFBRSxFQUFFO0FBQ2xDLFFBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQzs7QUFFdkIsU0FBSyxDQUFDO0FBQ0osWUFBTSxFQUFFLFFBQVE7QUFDaEIsU0FBRyxFQUFFLGdCQUFnQixHQUFHLEVBQUU7S0FDM0IsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFTLFFBQVEsRUFBRTtBQUN6QixXQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0tBQ3pCLEVBQUUsVUFBVSxLQUFLLEVBQUU7QUFDbEIsYUFBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLENBQUM7S0FDL0IsQ0FBQyxDQUFDOztBQUVILFdBQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQztHQUN0QixDQUFDO0NBR0gsQ0FBQyxDQUFDIiwiZmlsZSI6InB1YmxpYy9zZXJ2aWNlcy9Qb3NpdGlvblN2Yy5qcyIsInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXIubW9kdWxlKCd0ZXJtaW5hdG9yQXBwJykuc2VydmljZSgnUG9zaXRpb25TdmMnLCBmdW5jdGlvbigkaHR0cCwgJHEpIHtcblxuICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgLy8gUG9zaXRpb24gQ2FsbHNcbiAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbiAgdGhpcy5nZXRQb3NpdGlvbnMgPSBmdW5jdGlvbiAoKSB7XG5cbiAgICB2YXIgZGVmZXIgPSAkcS5kZWZlcigpO1xuXG4gICAgJGh0dHAoe1xuICAgICAgbWV0aG9kOiBcIkdFVFwiLFxuICAgICAgdXJsOiBcIi9hcGkvcG9zaXRpb25cIlxuICAgIH0pLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgICAgIGRlZmVyLnJlc29sdmUocmVzcG9uc2UpO1xuICAgIH0sIGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgY29uc29sZS5sb2coXCJlcnJvcjogXCIsIGVycm9yKTtcbiAgICB9KTtcblxuICAgIHJldHVybiBkZWZlci5wcm9taXNlO1xuICB9O1xuXG4gIHRoaXMuZ2V0T25lUG9zaXRpb24gPSBmdW5jdGlvbiAoaWQpIHtcblxuICAgIHZhciBkZWZlciA9ICRxLmRlZmVyKCk7XG5cbiAgICAkaHR0cCh7XG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICB1cmw6IFwiL2FwaS9wb3NpdGlvbi9cIiArIGlkXG4gICAgfSkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgZGVmZXIucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmxvZyhcImVycm9yOiBcIiwgZXJyb3IpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGRlZmVyLnByb21pc2U7XG4gIH07XG5cbiAgdGhpcy5nZXRQb3NpdGlvblRhc2sgPSBmdW5jdGlvbiAoaWQpIHtcblxuICAgIHZhciBkZWZlciA9ICRxLmRlZmVyKCk7XG5cbiAgICAkaHR0cCh7XG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICB1cmw6IFwiL2FwaS90YXNrcy9wb3NpdGlvbi9cIiArIGlkXG4gICAgfSkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgZGVmZXIucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmxvZyhcImVycm9yOiBcIiwgZXJyb3IpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGRlZmVyLnByb21pc2U7XG4gIH07XG5cbiAgdGhpcy5wb3N0UG9zaXRpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGRlZmVyID0gJHEuZGVmZXIoKTtcblxuICAgICRodHRwKHtcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICB1cmw6IFwiL2FwaS9wb3NpdGlvblwiLFxuICAgICAgZGF0YToge31cbiAgICB9KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICBkZWZlci5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiZXJyb3I6IFwiLCBlcnJvcik7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gZGVmZXIucHJvbWlzZTtcbiAgfTtcblxuICB0aGlzLmVkaXRQb3NpdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZGVmZXIgPSAkcS5kZWZlcigpO1xuXG4gICAgJGh0dHAoe1xuICAgICAgbWV0aG9kOiBcIlBVVFwiLFxuICAgICAgdXJsOiBcIi9hcGkvcG9zaXRpb24vXCIgKyBpZCxcbiAgICAgIGRhdGE6IHt9XG4gICAgfSkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgZGVmZXIucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmxvZyhcImVycm9yOiBcIiwgZXJyb3IpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGRlZmVyLnByb21pc2U7XG4gIH07XG5cbiAgdGhpcy5kZWxldGVQb3NpdGlvbiA9IGZ1bmN0aW9uIChpZCkge1xuICAgIHZhciBkZWZlciA9ICRxLmRlZmVyKCk7XG5cbiAgICAkaHR0cCh7XG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICB1cmw6IFwiL2FwaS9wb3NpdGlvbi9cIiArIGlkXG4gICAgfSkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgZGVmZXIucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmxvZyhcImVycm9yOiBcIiwgZXJyb3IpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGRlZmVyLnByb21pc2U7XG4gIH07XG5cblxufSk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
