'use strict';

angular.module('terminatorApp').service('DepartmentSvc', function ($http, $q) {

  ////////////////////////
  // Department Calls
  ////////////////////////

  this.getDepartments = function () {

    var defer = $q.defer();

    $http({
      method: "GET",
      url: "/api/department"
    }).then(function (response) {
      defer.resolve(response);
    }, function (error) {
      console.log("error: ", error);
    });

    return defer.promise;
  };

  this.getOneDepartment = function (id) {

    var defer = $q.defer();

    $http({
      method: "GET",
      url: "/api/department/" + id
    }).then(function (response) {
      defer.resolve(response);
    }, function (error) {
      console.log("error: ", error);
    });

    return defer.promise;
  };

  this.getDepartmentTask = function (id) {

    var defer = $q.defer();

    $http({
      method: "GET",
      url: "/api/tasks/department/" + id
    }).then(function (response) {
      defer.resolve(response);
    }, function (error) {
      console.log("error: ", error);
    });

    return defer.promise;
  };

  this.postDepartment = function () {
    var defer = $q.defer();

    $http({
      method: "POST",
      url: "/api/department",
      data: {}
    }).then(function (response) {
      defer.resolve(response);
    }, function (error) {
      console.log("error: ", error);
    });

    return defer.promise;
  };

  this.editDepartment = function () {
    var defer = $q.defer();

    $http({
      method: "PUT",
      url: "/api/department/" + id,
      data: {}
    }).then(function (response) {
      defer.resolve(response);
    }, function (error) {
      console.log("error: ", error);
    });

    return defer.promise;
  };

  this.deleteDepartment = function (id) {
    var defer = $q.defer();

    $http({
      method: "DELETE",
      url: "/api/department/" + id
    }).then(function (response) {
      defer.resolve(response);
    }, function (error) {
      console.log("error: ", error);
    });

    return defer.promise;
  };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInB1YmxpYy9zZXJ2aWNlcy9EZXBhcnRtZW50U3ZjLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsQ0FBQyxPQUFPLENBQUMsZUFBZSxFQUFFLFVBQVMsS0FBSyxFQUFFLEVBQUUsRUFBRTs7Ozs7O0FBTTNFLE1BQUksQ0FBQyxjQUFjLEdBQUcsWUFBWTs7QUFFaEMsUUFBSSxLQUFLLEdBQUcsRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDOztBQUV2QixTQUFLLENBQUM7QUFDSixZQUFNLEVBQUUsS0FBSztBQUNiLFNBQUcsRUFBRSxpQkFBaUI7S0FDdkIsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFTLFFBQVEsRUFBRTtBQUN6QixXQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0tBQ3pCLEVBQUUsVUFBVSxLQUFLLEVBQUU7QUFDbEIsYUFBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLENBQUM7S0FDL0IsQ0FBQyxDQUFDOztBQUVILFdBQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQztHQUN0QixDQUFDOztBQUVGLE1BQUksQ0FBQyxnQkFBZ0IsR0FBRyxVQUFVLEVBQUUsRUFBRTs7QUFFcEMsUUFBSSxLQUFLLEdBQUcsRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDOztBQUV2QixTQUFLLENBQUM7QUFDSixZQUFNLEVBQUUsS0FBSztBQUNiLFNBQUcsRUFBRSxrQkFBa0IsR0FBRyxFQUFFO0tBQzdCLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBUyxRQUFRLEVBQUU7QUFDekIsV0FBSyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztLQUN6QixFQUFFLFVBQVUsS0FBSyxFQUFFO0FBQ2xCLGFBQU8sQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQyxDQUFDO0tBQy9CLENBQUMsQ0FBQzs7QUFFSCxXQUFPLEtBQUssQ0FBQyxPQUFPLENBQUM7R0FDdEIsQ0FBQzs7QUFFRixNQUFJLENBQUMsaUJBQWlCLEdBQUcsVUFBVSxFQUFFLEVBQUU7O0FBRXJDLFFBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQzs7QUFFdkIsU0FBSyxDQUFDO0FBQ0osWUFBTSxFQUFFLEtBQUs7QUFDYixTQUFHLEVBQUUsd0JBQXdCLEdBQUcsRUFBRTtLQUNuQyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVMsUUFBUSxFQUFFO0FBQ3pCLFdBQUssQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7S0FDekIsRUFBRSxVQUFVLEtBQUssRUFBRTtBQUNsQixhQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsQ0FBQztLQUMvQixDQUFDLENBQUM7O0FBRUgsV0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDO0dBQ3RCLENBQUM7O0FBRUYsTUFBSSxDQUFDLGNBQWMsR0FBRyxZQUFZO0FBQ2hDLFFBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQzs7QUFFdkIsU0FBSyxDQUFDO0FBQ0osWUFBTSxFQUFFLE1BQU07QUFDZCxTQUFHLEVBQUUsaUJBQWlCO0FBQ3RCLFVBQUksRUFBRSxFQUFFO0tBQ1QsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFTLFFBQVEsRUFBRTtBQUN6QixXQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0tBQ3pCLEVBQUUsVUFBVSxLQUFLLEVBQUU7QUFDbEIsYUFBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLENBQUM7S0FDL0IsQ0FBQyxDQUFDOztBQUVILFdBQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQztHQUN0QixDQUFDOztBQUVGLE1BQUksQ0FBQyxjQUFjLEdBQUcsWUFBWTtBQUNoQyxRQUFJLEtBQUssR0FBRyxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUM7O0FBRXZCLFNBQUssQ0FBQztBQUNKLFlBQU0sRUFBRSxLQUFLO0FBQ2IsU0FBRyxFQUFFLGtCQUFrQixHQUFHLEVBQUU7QUFDNUIsVUFBSSxFQUFFLEVBQUU7S0FDVCxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVMsUUFBUSxFQUFFO0FBQ3pCLFdBQUssQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7S0FDekIsRUFBRSxVQUFVLEtBQUssRUFBRTtBQUNsQixhQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsQ0FBQztLQUMvQixDQUFDLENBQUM7O0FBRUgsV0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDO0dBQ3RCLENBQUM7O0FBRUYsTUFBSSxDQUFDLGdCQUFnQixHQUFHLFVBQVUsRUFBRSxFQUFFO0FBQ3BDLFFBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQzs7QUFFdkIsU0FBSyxDQUFDO0FBQ0osWUFBTSxFQUFFLFFBQVE7QUFDaEIsU0FBRyxFQUFFLGtCQUFrQixHQUFHLEVBQUU7S0FDN0IsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFTLFFBQVEsRUFBRTtBQUN6QixXQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0tBQ3pCLEVBQUUsVUFBVSxLQUFLLEVBQUU7QUFDbEIsYUFBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLENBQUM7S0FDL0IsQ0FBQyxDQUFDOztBQUVILFdBQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQztHQUN0QixDQUFDO0NBR0gsQ0FBQyxDQUFDIiwiZmlsZSI6InB1YmxpYy9zZXJ2aWNlcy9EZXBhcnRtZW50U3ZjLmpzIiwic291cmNlc0NvbnRlbnQiOlsiYW5ndWxhci5tb2R1bGUoJ3Rlcm1pbmF0b3JBcHAnKS5zZXJ2aWNlKCdEZXBhcnRtZW50U3ZjJywgZnVuY3Rpb24oJGh0dHAsICRxKSB7XG5cbiAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4gIC8vIERlcGFydG1lbnQgQ2FsbHNcbiAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbiAgdGhpcy5nZXREZXBhcnRtZW50cyA9IGZ1bmN0aW9uICgpIHtcblxuICAgIHZhciBkZWZlciA9ICRxLmRlZmVyKCk7XG5cbiAgICAkaHR0cCh7XG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICB1cmw6IFwiL2FwaS9kZXBhcnRtZW50XCJcbiAgICB9KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICBkZWZlci5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiZXJyb3I6IFwiLCBlcnJvcik7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gZGVmZXIucHJvbWlzZTtcbiAgfTtcblxuICB0aGlzLmdldE9uZURlcGFydG1lbnQgPSBmdW5jdGlvbiAoaWQpIHtcblxuICAgIHZhciBkZWZlciA9ICRxLmRlZmVyKCk7XG5cbiAgICAkaHR0cCh7XG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICB1cmw6IFwiL2FwaS9kZXBhcnRtZW50L1wiICsgaWRcbiAgICB9KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICBkZWZlci5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiZXJyb3I6IFwiLCBlcnJvcik7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gZGVmZXIucHJvbWlzZTtcbiAgfTtcblxuICB0aGlzLmdldERlcGFydG1lbnRUYXNrID0gZnVuY3Rpb24gKGlkKSB7XG5cbiAgICB2YXIgZGVmZXIgPSAkcS5kZWZlcigpO1xuXG4gICAgJGh0dHAoe1xuICAgICAgbWV0aG9kOiBcIkdFVFwiLFxuICAgICAgdXJsOiBcIi9hcGkvdGFza3MvZGVwYXJ0bWVudC9cIiArIGlkXG4gICAgfSkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgZGVmZXIucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmxvZyhcImVycm9yOiBcIiwgZXJyb3IpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGRlZmVyLnByb21pc2U7XG4gIH07XG5cbiAgdGhpcy5wb3N0RGVwYXJ0bWVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZGVmZXIgPSAkcS5kZWZlcigpO1xuXG4gICAgJGh0dHAoe1xuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIHVybDogXCIvYXBpL2RlcGFydG1lbnRcIixcbiAgICAgIGRhdGE6IHt9XG4gICAgfSkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgZGVmZXIucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmxvZyhcImVycm9yOiBcIiwgZXJyb3IpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGRlZmVyLnByb21pc2U7XG4gIH07XG5cbiAgdGhpcy5lZGl0RGVwYXJ0bWVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZGVmZXIgPSAkcS5kZWZlcigpO1xuXG4gICAgJGh0dHAoe1xuICAgICAgbWV0aG9kOiBcIlBVVFwiLFxuICAgICAgdXJsOiBcIi9hcGkvZGVwYXJ0bWVudC9cIiArIGlkLFxuICAgICAgZGF0YToge31cbiAgICB9KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICBkZWZlci5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiZXJyb3I6IFwiLCBlcnJvcik7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gZGVmZXIucHJvbWlzZTtcbiAgfTtcblxuICB0aGlzLmRlbGV0ZURlcGFydG1lbnQgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICB2YXIgZGVmZXIgPSAkcS5kZWZlcigpO1xuXG4gICAgJGh0dHAoe1xuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgICAgdXJsOiBcIi9hcGkvZGVwYXJ0bWVudC9cIiArIGlkXG4gICAgfSkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgZGVmZXIucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmxvZyhcImVycm9yOiBcIiwgZXJyb3IpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGRlZmVyLnByb21pc2U7XG4gIH07XG5cblxufSk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
