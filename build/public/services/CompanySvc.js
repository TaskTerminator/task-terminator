'use strict';

angular.module('terminatorApp').service('CompanySvc', function ($http, $q) {

  ////////////////////////
  // Company Calls
  ////////////////////////

  this.getCompanies = function () {

    var defer = $q.defer();

    $http({
      method: "GET",
      url: "/api/company"
    }).then(function (response) {
      defer.resolve(response);
    }, function (error) {
      console.log("error: ", error);
    });

    return defer.promise;
  };

  this.getOneCompany = function (id) {
    var defer = $q.defer();
    $http({
      method: "GET",
      url: "/api/company/" + id
    }).then(function (response) {
      defer.resolve(response);
    }, function (error) {
      console.log("error: ", error);
    });
    return defer.promise;
  };

  this.getCompanyTask = function (id) {

    var defer = $q.defer();

    $http({
      method: "GET",
      url: "/api/tasks/company/" + id
    }).then(function (response) {
      defer.resolve(response);
    }, function (error) {
      console.log("error: ", error);
    });

    return defer.promise;
  };

  this.postCompany = function () {
    var defer = $q.defer();

    $http({
      method: "POST",
      url: "/api/company",
      data: {}
    }).then(function (response) {
      defer.resolve(response);
    }, function (error) {
      console.log("error: ", error);
    });

    return defer.promise;
  };

  this.editCompany = function () {
    var defer = $q.defer();

    $http({
      method: "PUT",
      url: "/api/company/" + id,
      data: {}
    }).then(function (response) {
      defer.resolve(response);
    }, function (error) {
      console.log("error: ", error);
    });

    return defer.promise;
  };

  this.deleteCompany = function (id) {
    var defer = $q.defer();

    $http({
      method: "DELETE",
      url: "/api/company/" + id
    }).then(function (response) {
      defer.resolve(response);
    }, function (error) {
      console.log("error: ", error);
    });

    return defer.promise;;
  };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInB1YmxpYy9zZXJ2aWNlcy9Db21wYW55U3ZjLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsQ0FBQyxPQUFPLENBQUMsWUFBWSxFQUFFLFVBQVMsS0FBSyxFQUFFLEVBQUUsRUFBRTs7Ozs7O0FBTXhFLE1BQUksQ0FBQyxZQUFZLEdBQUcsWUFBWTs7QUFFOUIsUUFBSSxLQUFLLEdBQUcsRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDOztBQUV2QixTQUFLLENBQUM7QUFDSixZQUFNLEVBQUUsS0FBSztBQUNiLFNBQUcsRUFBRSxjQUFjO0tBQ3BCLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBUyxRQUFRLEVBQUU7QUFDekIsV0FBSyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztLQUN6QixFQUFFLFVBQVUsS0FBSyxFQUFFO0FBQ2xCLGFBQU8sQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQyxDQUFDO0tBQy9CLENBQUMsQ0FBQzs7QUFFSCxXQUFPLEtBQUssQ0FBQyxPQUFPLENBQUM7R0FDdEIsQ0FBQzs7QUFFRixNQUFJLENBQUMsYUFBYSxHQUFHLFVBQVUsRUFBRSxFQUFFO0FBQ2pDLFFBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUN2QixTQUFLLENBQUM7QUFDSixZQUFNLEVBQUUsS0FBSztBQUNiLFNBQUcsRUFBRSxlQUFlLEdBQUcsRUFBRTtLQUMxQixDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVMsUUFBUSxFQUFFO0FBQ3pCLFdBQUssQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7S0FDekIsRUFBRSxVQUFVLEtBQUssRUFBRTtBQUNsQixhQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsQ0FBQztLQUMvQixDQUFDLENBQUM7QUFDSCxXQUFPLEtBQUssQ0FBQyxPQUFPLENBQUM7R0FDdEIsQ0FBQzs7QUFFRixNQUFJLENBQUMsY0FBYyxHQUFHLFVBQVUsRUFBRSxFQUFFOztBQUVsQyxRQUFJLEtBQUssR0FBRyxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUM7O0FBRXZCLFNBQUssQ0FBQztBQUNKLFlBQU0sRUFBRSxLQUFLO0FBQ2IsU0FBRyxFQUFFLHFCQUFxQixHQUFHLEVBQUU7S0FDaEMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFTLFFBQVEsRUFBRTtBQUN6QixXQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0tBQ3pCLEVBQUUsVUFBVSxLQUFLLEVBQUU7QUFDbEIsYUFBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLENBQUM7S0FDL0IsQ0FBQyxDQUFDOztBQUVILFdBQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQztHQUN0QixDQUFDOztBQUVGLE1BQUksQ0FBQyxXQUFXLEdBQUcsWUFBWTtBQUM3QixRQUFJLEtBQUssR0FBRyxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUM7O0FBRXZCLFNBQUssQ0FBQztBQUNKLFlBQU0sRUFBRSxNQUFNO0FBQ2QsU0FBRyxFQUFFLGNBQWM7QUFDbkIsVUFBSSxFQUFFLEVBQUU7S0FDVCxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVMsUUFBUSxFQUFFO0FBQ3pCLFdBQUssQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7S0FDekIsRUFBRSxVQUFVLEtBQUssRUFBRTtBQUNsQixhQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsQ0FBQztLQUMvQixDQUFDLENBQUM7O0FBRUgsV0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDO0dBQ3RCLENBQUM7O0FBRUYsTUFBSSxDQUFDLFdBQVcsR0FBRyxZQUFZO0FBQzdCLFFBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQzs7QUFFdkIsU0FBSyxDQUFDO0FBQ0osWUFBTSxFQUFFLEtBQUs7QUFDYixTQUFHLEVBQUUsZUFBZSxHQUFHLEVBQUU7QUFDekIsVUFBSSxFQUFFLEVBQUU7S0FDVCxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVMsUUFBUSxFQUFFO0FBQ3pCLFdBQUssQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7S0FDekIsRUFBRSxVQUFVLEtBQUssRUFBRTtBQUNsQixhQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsQ0FBQztLQUMvQixDQUFDLENBQUM7O0FBRUgsV0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDO0dBQ3RCLENBQUM7O0FBRUYsTUFBSSxDQUFDLGFBQWEsR0FBRyxVQUFVLEVBQUUsRUFBRTtBQUNqQyxRQUFJLEtBQUssR0FBRyxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUM7O0FBRXZCLFNBQUssQ0FBQztBQUNKLFlBQU0sRUFBRSxRQUFRO0FBQ2hCLFNBQUcsRUFBRSxlQUFlLEdBQUcsRUFBRTtLQUMxQixDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVMsUUFBUSxFQUFFO0FBQ3pCLFdBQUssQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7S0FDekIsRUFBRSxVQUFVLEtBQUssRUFBRTtBQUNsQixhQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsQ0FBQztLQUMvQixDQUFDLENBQUM7O0FBRUgsV0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7R0FDdkIsQ0FBQztDQUdILENBQUMsQ0FBQyIsImZpbGUiOiJwdWJsaWMvc2VydmljZXMvQ29tcGFueVN2Yy5qcyIsInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXIubW9kdWxlKCd0ZXJtaW5hdG9yQXBwJykuc2VydmljZSgnQ29tcGFueVN2YycsIGZ1bmN0aW9uKCRodHRwLCAkcSkge1xuXG4gIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICAvLyBDb21wYW55IENhbGxzXG4gIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG4gIHRoaXMuZ2V0Q29tcGFuaWVzID0gZnVuY3Rpb24gKCkge1xuXG4gICAgdmFyIGRlZmVyID0gJHEuZGVmZXIoKTtcblxuICAgICRodHRwKHtcbiAgICAgIG1ldGhvZDogXCJHRVRcIixcbiAgICAgIHVybDogXCIvYXBpL2NvbXBhbnlcIlxuICAgIH0pLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgICAgIGRlZmVyLnJlc29sdmUocmVzcG9uc2UpO1xuICAgIH0sIGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgY29uc29sZS5sb2coXCJlcnJvcjogXCIsIGVycm9yKTtcbiAgICB9KTtcblxuICAgIHJldHVybiBkZWZlci5wcm9taXNlO1xuICB9O1xuXG4gIHRoaXMuZ2V0T25lQ29tcGFueSA9IGZ1bmN0aW9uIChpZCkge1xuICAgIHZhciBkZWZlciA9ICRxLmRlZmVyKCk7XG4gICAgJGh0dHAoe1xuICAgICAgbWV0aG9kOiBcIkdFVFwiLFxuICAgICAgdXJsOiBcIi9hcGkvY29tcGFueS9cIiArIGlkXG4gICAgfSkudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgZGVmZXIucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmxvZyhcImVycm9yOiBcIiwgZXJyb3IpO1xuICAgIH0pO1xuICAgIHJldHVybiBkZWZlci5wcm9taXNlO1xuICB9O1xuXG4gIHRoaXMuZ2V0Q29tcGFueVRhc2sgPSBmdW5jdGlvbiAoaWQpIHtcblxuICAgIHZhciBkZWZlciA9ICRxLmRlZmVyKCk7XG5cbiAgICAkaHR0cCh7XG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICB1cmw6IFwiL2FwaS90YXNrcy9jb21wYW55L1wiICsgaWRcbiAgICB9KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICBkZWZlci5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiZXJyb3I6IFwiLCBlcnJvcik7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gZGVmZXIucHJvbWlzZTtcbiAgfTtcblxuICB0aGlzLnBvc3RDb21wYW55ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBkZWZlciA9ICRxLmRlZmVyKCk7XG5cbiAgICAkaHR0cCh7XG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgdXJsOiBcIi9hcGkvY29tcGFueVwiLFxuICAgICAgZGF0YToge31cbiAgICB9KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICBkZWZlci5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiZXJyb3I6IFwiLCBlcnJvcik7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gZGVmZXIucHJvbWlzZTtcbiAgfTtcblxuICB0aGlzLmVkaXRDb21wYW55ID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBkZWZlciA9ICRxLmRlZmVyKCk7XG5cbiAgICAkaHR0cCh7XG4gICAgICBtZXRob2Q6IFwiUFVUXCIsXG4gICAgICB1cmw6IFwiL2FwaS9jb21wYW55L1wiICsgaWQsXG4gICAgICBkYXRhOiB7fVxuICAgIH0pLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgICAgIGRlZmVyLnJlc29sdmUocmVzcG9uc2UpO1xuICAgIH0sIGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgY29uc29sZS5sb2coXCJlcnJvcjogXCIsIGVycm9yKTtcbiAgICB9KTtcblxuICAgIHJldHVybiBkZWZlci5wcm9taXNlO1xuICB9O1xuXG4gIHRoaXMuZGVsZXRlQ29tcGFueSA9IGZ1bmN0aW9uIChpZCkge1xuICAgIHZhciBkZWZlciA9ICRxLmRlZmVyKCk7XG5cbiAgICAkaHR0cCh7XG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICB1cmw6IFwiL2FwaS9jb21wYW55L1wiICsgaWRcbiAgICB9KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICBkZWZlci5yZXNvbHZlKHJlc3BvbnNlKTtcbiAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiZXJyb3I6IFwiLCBlcnJvcik7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gZGVmZXIucHJvbWlzZTs7XG4gIH07XG5cblxufSk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
