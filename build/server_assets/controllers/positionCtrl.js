'use strict';

var mongoose = require('mongoose');
var Position = require('../models/Position.js');
var Company = require('../models/Company.js');
var Department = require('../models/Department.js');

module.exports = {
  newPosition: function newPosition(req, res) {
    var newPosition = new Position(req.body);
    Company.findOne({
      _id: req.params.companyid
    }).exec().then(function (result) {
      result.positions.push(newPosition._id);
      result.save();
    });

    Department.findOne({
      "name": "All"
    }).exec().then(function (result) {
      result.positions.push(newPosition._id);
      result.save();
    });

    Department.findOne({
      _id: req.params.departmentid
    }).exec().then(function (result) {
      // console.log("DEPARTMENT", result);
      result.positions.push(newPosition._id);
      result.save();
    });
    newPosition.company = req.params.companyid;
    newPosition.department = req.params.departmentid;
    newPosition.save().then(function (result) {
      return res.json(result);
    }).catch(function (err) {
      return res.status(500).end();
    });
  },
  onePosition: function onePosition(req, res) {
    Position.findById(req.params.id).exec().then(function (position) {
      return res.json(position);
    }).catch(function (err) {
      return res.status(500).end();
    });
  },
  editPosition: function editPosition(req, res) {
    Position.update({
      _id: req.params.id
    }, req.body).then(function () {
      return res.status(200).end();
    }).catch(function (err) {
      return res.status(500).end();
    });
  },
  deletePosition: function deletePosition(req, res) {
    Position.remove({
      _id: req.params.id
    }, req.body).then(function () {
      return res.status(200).end();
    }).catch(function (err) {
      return res.status(500).end();
    });
  },
  allPositions: function allPositions(req, res) {
    Position.find().exec().then(function (positions) {
      return res.json(positions);
    }).catch(function (err) {
      return res.status(500).end();
    });
  }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlcl9hc3NldHMvY29udHJvbGxlcnMvcG9zaXRpb25DdHJsLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ3JDLElBQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO0FBQ2xELElBQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO0FBQ2hELElBQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDOztBQUV0RCxNQUFNLENBQUMsT0FBTyxHQUFHO0FBRWYsYUFBVyx1QkFBQyxHQUFHLEVBQUUsR0FBRyxFQUFFO0FBQ2xCLFFBQU0sV0FBVyxHQUFHLElBQUksUUFBUSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUMzQyxXQUFPLENBQ0osT0FBTyxDQUFDO0FBQ1AsU0FBRyxFQUFFLEdBQUcsQ0FBQyxNQUFNLENBQUMsU0FBUztLQUMxQixDQUFDLENBQ0QsSUFBSSxFQUFFLENBQ04sSUFBSSxDQUFDLFVBQVMsTUFBTSxFQUFFO0FBQ3JCLFlBQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUN2QyxZQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7S0FDZixDQUFDLENBQUM7O0FBRUwsY0FBVSxDQUNQLE9BQU8sQ0FBQztBQUNQLFlBQU0sRUFBRSxLQUFLO0tBQ2QsQ0FBQyxDQUNELElBQUksRUFBRSxDQUNOLElBQUksQ0FBQyxVQUFDLE1BQU0sRUFBSTtBQUNmLFlBQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUN2QyxZQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7S0FDZixDQUFDLENBQUM7O0FBRUwsY0FBVSxDQUNQLE9BQU8sQ0FBQztBQUNQLFNBQUcsRUFBRSxHQUFHLENBQUMsTUFBTSxD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b250cm9sbGVycy9wb3NpdGlvbkN0cmwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XG5jb25zdCBQb3NpdGlvbiA9IHJlcXVpcmUoJy4uL21vZGVscy9Qb3NpdGlvbi5qcycpO1xuY29uc3QgQ29tcGFueSA9IHJlcXVpcmUoJy4uL21vZGVscy9Db21wYW55LmpzJyk7XG5jb25zdCBEZXBhcnRtZW50ID0gcmVxdWlyZSgnLi4vbW9kZWxzL0RlcGFydG1lbnQuanMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG5cbiAgbmV3UG9zaXRpb24ocmVxLCByZXMpIHtcbiAgICAgIGNvbnN0IG5ld1Bvc2l0aW9uID0gbmV3IFBvc2l0aW9uKHJlcS5ib2R5KTtcbiAgICAgIENvbXBhbnlcbiAgICAgICAgLmZpbmRPbmUoe1xuICAgICAgICAgIF9pZDogcmVxLnBhcmFtcy5jb21wYW55aWRcbiAgICAgICAgfSlcbiAgICAgICAgLmV4ZWMoKVxuICAgICAgICAudGhlbihmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgICAgICByZXN1bHQucG9zaXRpb25zLnB1c2gobmV3UG9zaXRpb24uX2lkKTtcbiAgICAgICAgICByZXN1bHQuc2F2ZSgpO1xuICAgICAgICB9KTtcblxuICAgICAgRGVwYXJ0bWVudFxuICAgICAgICAuZmluZE9uZSh7XG4gICAgICAgICAgXCJuYW1lXCI6IFwiQWxsXCJcbiAgICAgICAgfSlcbiAgICAgICAgLmV4ZWMoKVxuICAgICAgICAudGhlbigocmVzdWx0KSA9PntcbiAgICAgICAgICByZXN1bHQucG9zaXRpb25zLnB1c2gobmV3UG9zaXRpb24uX2lkKTtcbiAgICAgICAgICByZXN1bHQuc2F2ZSgpO1xuICAgICAgICB9KTtcblxuICAgICAgRGVwYXJ0bWVudFxuICAgICAgICAuZmluZE9uZSh7XG4gICAgICAgICAgX2lkOiByZXEucGFyYW1zLmRlcGFydG1lbnRpZFxuICAgICAgICB9KS5leGVjKCkudGhlbigocmVzdWx0KSA9PiB7XG4gICAgICAgICAgLy8gY29uc29sZS5sb2coXCJERVBBUlRNRU5UXCIsIHJlc3VsdCk7XG4gICAgICAgICAgcmVzdWx0LnBvc2l0aW9ucy5wdXNoKG5ld1Bvc2l0aW9uLl9pZCk7XG4gICAgICAgICAgcmVzdWx0LnNhdmUoKTtcbiAgICAgICAgfSk7XG4gICAgICBuZXdQb3NpdGlvbi5jb21wYW55ID0gcmVxLnBhcmFtcy5jb21wYW55aWQ7XG4gICAgICBuZXdQb3NpdGlvbi5kZXBhcnRtZW50ID0gcmVxLnBhcmFtcy5kZXBhcnRtZW50aWQ7XG4gICAgICBuZXdQb3NpdGlvbi5zYXZlKCkudGhlbigocmVzdWx0KSA9PiB7XG4gICAgICAgIHJldHVybiByZXMuanNvbihyZXN1bHQpO1xuICAgICAgfSkuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmVuZCgpO1xuICAgICAgfSk7XG4gICAgfSxcblxuICAgIG9uZVBvc2l0aW9uKHJlcSwgcmVzKSB7XG4gICAgICBQb3NpdGlvbi5maW5kQnlJZChyZXEucGFyYW1zLmlkKS5leGVjKCkudGhlbigocG9zaXRpb24pID0+IHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKHBvc2l0aW9uKTtcbiAgICAgIH0pLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5lbmQoKTtcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBlZGl0UG9zaXRpb24ocmVxLCByZXMpIHtcbiAgICAgIFBvc2l0aW9uLnVwZGF0ZSh7XG4gICAgICAgIF9pZDogcmVxLnBhcmFtcy5pZFxuICAgICAgfSwgcmVxLmJvZHkpLnRoZW4oKCkgPT4ge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmVuZCgpO1xuICAgICAgfSkuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmVuZCgpO1xuICAgICAgfSk7XG4gICAgfSxcblxuICAgIGRlbGV0ZVBvc2l0aW9uKHJlcSwgcmVzKSB7XG4gICAgICBQb3NpdGlvbi5yZW1vdmUoe1xuICAgICAgICBfaWQ6IHJlcS5wYXJhbXMuaWRcbiAgICAgIH0sIHJlcS5ib2R5KS50aGVuKCgpID0+IHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5lbmQoKTtcbiAgICAgIH0pLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5lbmQoKTtcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBhbGxQb3NpdGlvbnMocmVxLCByZXMpIHtcbiAgICAgIFBvc2l0aW9uLmZpbmQoKS5leGVjKCkudGhlbigocG9zaXRpb25zKSA9PiB7XG4gICAgICAgIHJldHVybiByZXMuanNvbihwb3NpdGlvbnMpO1xuICAgICAgfSkuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmVuZCgpO1xuICAgICAgfSk7XG4gICAgfVxuXG59O1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
